<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thoughtworks.ketsu.infrastructure.mybatis.mappers.ProjectMapper">
    <insert id="create">
        insert into projects (id, name, account) values (#{project.projectId.id}, #{project.name}, #{project.account});
    </insert>
    <insert id="createDemand">
        insert into project_demands (project_id, capability_id, created_at)
        values (#{projectCapabilityDemand.projectId.id}, #{projectCapabilityDemand.capabilityId.id}, #{projectCapabilityDemand.createdAt});
    </insert>
    <insert id="createMember">
        insert into project_members (project_id, user_id)
        values (#{member.projectId.id}, #{member.userId.id})
    </insert>
    <delete id="deleteByProjectIdAndCapabilityId">
        delete from project_demands where capability_id = #{demand.capabilityId.id} and project_id = #{demand.projectId.id}
    </delete>
    <delete id="deleteProjectMember">
        DELETE from project_members where user_id = #{member.userId.id} and project_id = #{member.projectId.id}
    </delete>
    <delete id="deleteByProjectId">
        DELETE from project_members where project_id = #{projectId}
    </delete>
    <sql id="selectProject">
        select
        <include refid="columns.project"/>,
        <include refid="columns.project_capability_demand"/>,
        <include refid="columns.project_member"/>
        from projects P
        left join project_demands PD
        on P.id = PD.project_id
        left join project_members PM
        on P.id = PM.project_id
    </sql>
    <select id="ofId" resultMap="records.project">
        <include refid="selectProject"/>
        where P.id = #{id}
    </select>
    <select id="findDemandByProjectIdAndCapabilityId"
            resultMap="records.projectCapabilityDemand">
        select
        <include refid="columns.project_capability_demand"/>
        from project_demands PD
        where PD.project_id = #{projectId} and PD.capability_id = #{capabilityId}
    </select>
    <select id="findDemandsByProject"
            resultMap="records.projectCapabilityDemand">
        select
        <include refid="columns.project_capability_demand"/>
        from project_demands PD
        where PD.project_id = #{projectId}
    </select>
    <select id="findProjectsByUserId" resultMap="records.project">
        select
            <include refid="columns.project"/>,
            <include refid="columns.project_capability_demand"/>,
            <include refid="columns.project_member"/>
        from projects P
        left join project_demands PD
        on P.id = PD.project_id
        left join project_members PM
        on P.id = PM.project_id
        where P.id in (select DISTINCT project_id from project_members where user_id = #{userId})
    </select>
    <select id="findMembersOfProject"
            resultMap="records.projectMemberData">
        select
            <include refid="columns.project_member"/>,
            <include refid="columns.user"/>
        from project_members PM
        left join users U on PM.user_id = U.id
        where PM.project_id = #{projectId}
        order by PM.user_id
    </select>
</mapper>
